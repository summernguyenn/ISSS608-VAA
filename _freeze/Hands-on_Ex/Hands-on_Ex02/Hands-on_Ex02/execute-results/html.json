{
  "hash": "a6b0ca9fd03a5ce00e2e89ad256e9749",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on_Exercise 2 - Beyond ggplot2 Fundamentals\"\nauthor: \"Nguyen Nguyen Ha (Summer)\"\ndate: \"April 24, 2025\"\ndate-modified:  \"April 27,2025\"\nformat:\n  html:\n    css: styles.css\n    toc: true\nexecute: \n  warning: false\n  freeze: true\n---\n\n\n\n# 2.1. Overview\n\nWelcome to this chapter! Here, you'll explore a set of powerful **ggplot2 extensions** that help you craft stunning, publication-ready visualizations with precision and polish.\n\nBy the end of this session, you‚Äôll be able to confidently:\n\n-   **Control annotation placement** using the `{ggrepel}` package ‚Äî no more overlapping labels!\n-   **Design publication-quality visuals** with aesthetic finesse using `{ggthemes}` and `{hrbrthemes}`.\n-   **Build composite figures** by smartly combining multiple plots using the `{patchwork}` package.\n\nLet's level up your data storytelling game ‚Äî one plot at a time!\n\n# 2.2. Getting started\n\n## 2.2.1. Installing and loading the required libraries\n\nIn this exercise, alongside `tidyverse`, we‚Äôll use **four essential R packages** to boost your plotting game with `ggplot2`. Here's a quick rundown:\n\n-   **{ggrepel}**: Avoid overlapping text labels by using repelling geoms.\n-   **{ggthemes}**: Access a library of extra themes, geoms, and scales for your plots.\n-   **{hrbrthemes}**: Add typography-focused themes for better readability and polish.\n-   **{patchwork}**: Seamlessly stitch multiple `ggplot2` graphs into a single composite figure.\n\nTo ensure all packages are installed and loaded, use the following code chunk:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  ggrepel, \n  patchwork, \n  ggthemes, \n  hrbrthemes, \n  tidyverse\n)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n::: {.callout-tip title=\"Smart Loading Trick!\"}\nThis command checks if the packages are already installed.\\\nIf not, it installs them ‚Äî saving you time and hassle!\n:::\n\n## 2.2.2. Importing data\n\nA dataset named *`Exam_data`* is used in this section. It contains year-end examination scores for a cohort of Primary 3 students from a local school and is stored in CSV format.\n\nThe `read_csv()` function from the [**readr**](https://readr.tidyverse.org/) package, part of the **tidyverse**, is applied to import the file:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\", show_col_types = FALSE)\n```\n:::\n\n\n\nüìã Preview of the data:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|ID         |CLASS |GENDER |RACE    | ENGLISH| MATHS| SCIENCE|\n|:----------|:-----|:------|:-------|-------:|-----:|-------:|\n|Student321 |3I    |Male   |Malay   |      21|     9|      15|\n|Student305 |3I    |Female |Malay   |      24|    22|      16|\n|Student289 |3H    |Male   |Chinese |      26|    16|      16|\n|Student227 |3F    |Male   |Chinese |      27|    77|      31|\n|Student318 |3I    |Male   |Malay   |      27|    11|      25|\n|Student306 |3I    |Female |Malay   |      31|    16|      16|\n\n\n:::\n:::\n\n\n\n# 2.3. Beyond ggplot2 Annotation: `ggrepel`\n\nOne of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\n**Example: English scores versus Maths scores for Primary 3**\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n```\n:::\n\n\n:::\n\n> [`ggrepel`](https://ggrepel.slowkow.com/) is an extension of the **ggplot2** package that introduces specialized `geoms` to **repel overlapping text labels** in crowded plots.\n\n![](images/ggrepel.png)\n\nTo improve text label clarity:\n\n-   Replace `geom_text()` with [`geom_text_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html)\n-   Replace `geom_label()` with [`geom_label_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html)\n\nThese functions automatically adjust label positions to prevent overlap, resulting in a cleaner and more readable plot.\n\n::: {.callout-tip title=\"Tip!\"}\n`ggrepel` enhances label placement in **ggplot2**. Use `geom_text_repel()` and `geom_label_repel()` to prevent overlapping text.\n:::\n\n## 2.3.1. Working with `ggrepel`\n\nAdding too many labels to a plot can clutter the visualization and reduce clarity. The `ggrepel` package provides an effective solution by automatically adjusting the position of labels to avoid overlapping.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n```\n:::\n\n\n:::\n\n# 2.4. Beyond `ggplot2` Themes\n\nThe `ggplot2` package includes eight [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html) that allow for quick customization of plot appearance. These include:\n\n-   `theme_gray()` (default)\n-   `theme_bw()`\n-   `theme_classic()`\n-   `theme_dark()`\n-   `theme_light()`\n-   `theme_linedraw()`\n-   `theme_minimal()`\n-   `theme_void()`\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n```\n:::\n\n\n:::\n\nRefer to this [link](https://ggplot2.tidyverse.org/reference/index.html#themes) to learn more about ggplot2 `Themes`\n\n## 2.4.1. Working with ggtheme package\n\nThe `ggthemes` package offers additional themes for `ggplot2` that mimic the visual styles of well-known publications and tools such as:\n\n-   Edward Tufte\n-   Stephen Few\n-   [Fivethirtyeight](https://fivethirtyeight.com)\n-   [The Economist](https://www.economist.com)\n-   [The Wall Street Journal](https://www.wsj.com)\n-   Stata\n-   Excel\n\nIn the following example, the **Economist** theme is applied.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n```\n:::\n\n\n:::\n\n::: {.callout-note title=\"More from `ggthemes`\"}\nAdditional geoms and scales are also available via `ggthemes`.\\\nMore information can be found in [this vignette](https://ggplot2.tidyverse.org/reference/ggtheme.html).\n:::\n\n## 2.4.2. Working with hrbthems package\n\n[hrbrthemes](https://cran.r-project.org/web/packages/hrbrthemes/index.html) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n```\n:::\n\n\n:::\n\nThe second goal centers around productivity for a production workflow. In fact, this ‚Äúproduction workflow‚Äù is the context for where the elements of hrbrthemes should be used. Consult this [vignette](https://hrbrmstr.github.io/hrbrthemes/articles/why_hrbrthemes.html) to learn more.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n```\n:::\n\n\n:::\n\n::: {.callout-tip title=\"What can we learn from the code chunk above?`\"}\n-   `axis_title_size` argument is used to increase the font size of the axis title to 18,\n\n-   `base_size` argument is used to increase the default axis label to 15, and\n\n-   `grid` argument is used to remove the x-axis grid lines.\n:::\n\n# 2.5. Beyond Single Graph\n\nIt is common for a single chart to fall short in conveying a complete story. To enhance clarity and insight, multiple statistical graphics are often needed to work together. Extensions of `ggplot2` offer various tools that make it easy to combine multiple plots into a cohesive visual narrative.\n\nThe following section demonstrates how to build composite graphics using the `patchwork` package.\\\nBegin by generating three individual plots using the code chunk below.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(data=exam_data, \n                  aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n```\n:::\n\n\n:::\n\nNext:\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n```\n:::\n\n\n:::\n\nLastly, we will draw a scatterplot for English score versus Maths score by as shown below:\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n```\n:::\n\n\n:::\n\n## 2.5.1. Creating Composite Graphics: patchwork methods\n\nSeveral `ggplot2` extensions provide functions to create composite graphics by combining multiple plots into a single figure. Notable examples include:\n\n-   [`grid.arrange()`](https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html) from the **gridExtra** package\\\n-   [`plot_grid()`](https://wilkelab.org/cowplot/reference/plot_grid.html) from the [**cowplot**](https://wilkelab.org/cowplot/index.html) package\\\n-   [**`patchwork`**](https://patchwork.data-imaginist.com/), a purpose-built extension for composing multiple `ggplot2` outputs into a unified layout\n\nAmong these, the `patchwork` package offers a particularly simple and intuitive syntax for arranging plots. The basic layout rules include:\n\n-   Use the `+` operator for two-column layouts\\\n-   Wrap plots in parentheses `()` to group them\\\n-   Use the `/` operator to stack plots in rows\n\n## 2.5.2. Combining two ggplot2 graphs\n\nFigure in the tabset below shows a composite of two histograms created using the `patchwork` package.\n\n::: {.callout-note title=\"Note\"}\nObserve how clean and intuitive the syntax is when building a combined figure layout!\n:::\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 + p2\n```\n:::\n\n\n:::\n\n## 2.5.3. Combining three ggplot2 graphs\n\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n-   ‚Äú/‚Äù operator to stack two ggplot2 graphs,\n-   ‚Äú\\|‚Äù operator to place the plots beside each other,\n-   ‚Äú()‚Äù operator the define the sequence of the plotting.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(p1 / p2) | p3\n```\n:::\n\n\n:::\n\n## 2.5.4. Creating a composite figure with tag\n\nIn order to identify subplots in text, **patchwork** also provides auto-tagging capabilities as shown in the figure below.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n```\n:::\n\n\n:::\n\n## 2.5.5. Creating figure with insert\n\nBesides placing plots side-by-side or in stacked layouts, `patchwork` also enables flexible placement of plots on top of each other.\\\nUsing [`inset_element()`](https://patchwork.data-imaginist.com/reference/inset_element.html), one or more graphics can be freely overlaid on a base plot ‚Äî ideal for highlighting insights with mini visual summaries.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n```\n:::\n\n\n:::\n\n## 2.5.6. Creating a composite figure by using patchwork and ggtheme\n\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()\n```\n:::\n\n\n:::\n\n# 2.6. Reference\n\n-   [Patchwork R package goes nerd viral](https://patchwork.data-imaginist.com/)\n-   [ggrepel](https://ggrepel.slowkow.com/)\n-   [ggthemes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/)\n-   [hrbrthemes](https://github.com/hrbrmstr/hrbrthemes)\n-   [ggplot tips: Arranging plots](https://ggplot2-book.org/arranging-plots.html)\n-   [ggplot2 Theme Elements Demonstration](https://ggplot2.tidyverse.org/reference/theme.html)\n-   [ggplot2 Theme Elements Reference Sheet](https://ggplot2.tidyverse.org/articles/ggplot2-specs.html)\n",
    "supporting": [
      "Hands-on_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}